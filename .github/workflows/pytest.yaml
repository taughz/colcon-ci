---
name: Run tests

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      codecov:
        description: 'run codecov action after testing'
        default: true
        required: false
        type: boolean
      strategy-os:
        description: >-
          Operating systems to include in the strategy, for example: "macos-latest ubuntu-22.04"
        default: ''
        required: false
        type: string
      strategy-python:
        description: >-
          Python versions to include in the strategy, for example: "3.10 3.11"
        default: ''
        required: false
        type: string
      strategy-include-py36:
        description: >-
          Include old Python 3.6 in the strategy
        default: true
        required: false
        type: boolean
      strategy-include-stdeb:
        description: >-
          Include stdeb in the strategy
        default: true
        required: false
        type: boolean
      matrix-filter:
        description: 'jq filter string indicating which configuration(s)
          should be included'
        default: '.'
        required: false
        type: string
      repository:
        description: 'repository to test if different from current'
        default: ''
        required: false
        type: string
      setup-repository:
        description: 'repository used during job setup'
        default: 'taughz/colcon-ci'
        required: false
        type: string
    secrets:
      CODECOV_TOKEN:
        description: 'token to use when running codecov action after testing'
        required: false

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      strategy: ${{ steps.load.outputs.strategy }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.setup-repository }}
      - id: load
        run: |
          extra_args=()
          strat_os=(${{ inputs.strategy-os }})
          if [ "${#strat_os[@]}" -ne 0 ]; then
            extra_args+=(--os "${strat_os[@]}")
          fi
          strat_py=(${{ inputs.strategy-python }})
          if [ "${#strat_py[@]}" -ne 0 ]; then
            extra_args+=(--python "${strat_py[@]}")
          fi
          if [ "${{ inputs.strategy-include-py36 }}" = "false" ]; then
            extra_args+=(--include-py36=no)
          fi
          if [ "${{ inputs.strategy-include-stdeb }}" = "false" ]; then
            extra_args+=(--include-stdeb=no)
          fi
          ./genstrat.py ${extra_args[@]} > strategy.json
          strategy=$(jq -c -M '${{ inputs.matrix-filter }}' strategy.json)
          echo "strategy=${strategy}" >> $GITHUB_OUTPUT

  pytest:
    needs: [setup]
    strategy: ${{ fromJson(needs.setup.outputs.strategy) }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.setup-repository }}
          path: ./.github-ci-action-repo
      - uses: ./.github-ci-action-repo
      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ inputs.codecov }}
